name: Dockerize and Push to ECR

on:
  push:
    branches: ['dev', 'feat/179']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set client .env file
        run: |
          echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" >> ./client/.env.production
          echo "NEXT_PUBLIC_INSTALL_META_CHROME=${{ secrets.NEXT_PUBLIC_INSTALL_META_CHROME }}" >> ./client/.env.production
          echo "NEXT_PUBLIC_INSTALL_META_FIREFOX=${{ secrets.NEXT_PUBLIC_INSTALL_META_FIREFOX }}" >> ./client/.env.production
          echo "NEXT_PUBLIC_INSTALL_META_IOS=${{ secrets.NEXT_PUBLIC_INSTALL_META_IOS }}" >> ./client/.env.production
          echo "NEXT_PUBLIC_INSTALL_META_ANDROID=${{ secrets.NEXT_PUBLIC_INSTALL_META_ANDROID }}" >> ./client/.env.production
      
      - name: Set admin .env file
        run: |
          echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.NEXT_PUBLIC_BACKEND_URL }}" >> ./admin/.env.production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push server image to Amazon ECR
        id: build-server-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          SERVER_REPOSITORY: ${{ secrets.SERVER_REPOSITORY }}
          SERVER_IMAGE_TAG: ${{ secrets.SERVER_IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$SERVER_REPOSITORY:$SERVER_IMAGE_TAG ./server -f ./server/Dockerfile.prod
          docker push $ECR_REGISTRY/$SERVER_REPOSITORY:$SERVER_IMAGE_TAG

      - name: Build, tag, and push admin image to Amazon ECR
        id: build-admin-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ADMIN_REPOSITORY: ${{ secrets.ADMIN_REPOSITORY }}
          ADMIN_IMAGE_TAG: ${{ secrets.ADMIN_IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ADMIN_REPOSITORY:$ADMIN_IMAGE_TAG ./admin -f ./admin/Dockerfile
          docker push $ECR_REGISTRY/$ADMIN_REPOSITORY:$ADMIN_IMAGE_TAG

      - name: Build, tag, and push client image to Amazon ECR
        id: build-client-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          CLIENT_REPOSITORY: ${{ secrets.CLIENT_REPOSITORY }}
          CLIENT_IMAGE_TAG: ${{ secrets.CLIENT_IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$CLIENT_REPOSITORY:$CLIENT_IMAGE_TAG ./client -f ./client/Dockerfile
          docker push $ECR_REGISTRY/$CLIENT_REPOSITORY:$CLIENT_IMAGE_TAG
